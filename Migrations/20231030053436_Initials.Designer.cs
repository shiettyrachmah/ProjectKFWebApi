// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectKFWebApi.Domain.DBContext;

#nullable disable

namespace ProjectKFWebApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231030053436_Initials")]
    partial class Initials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebAPI.DTO.Domain.Molecules", b =>
                {
                    b.Property<Guid>("IdMolecules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("MolDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MoleculesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdMolecules");

                    b.ToTable("Molecules", (string)null);

                    b.HasData(
                        new
                        {
                            IdMolecules = new Guid("0ec8061c-594b-496a-b7bb-99190cfea9fa"),
                            IsActive = 1,
                            MolDescription = "Vaccine against TB antigen",
                            MoleculesName = "TB vaccine",
                            State = "-"
                        });
                });

            modelBuilder.Entity("WebAPI.DTO.Domain.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<Guid>("MoleculesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProtocolCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ProtocolTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StatusStudyID")
                        .HasColumnType("int");

                    b.Property<string>("StudyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VersionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Study");
                });

            modelBuilder.Entity("WebAPI.DTO.Domain.StudyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("StudyStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Start up"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Sites initiated"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Recruiting"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Recruiting Close"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "Last Site Recruiting"
                        },
                        new
                        {
                            Id = 6,
                            StatusName = "CSR Closed"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
